name: Create Branches

on:
  workflow_dispatch:
    inputs:
      date:
        description: 'Date in yyyymmdd format'
        required: true
        default: '20240806'

jobs:
  create-branches:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository # リポジトリのチェックアウトステップ
        uses: actions/checkout@v2 # actions/checkoutアクションのバージョン2を使用

      - name: Set up Git # Gitのユーザー名とメールアドレスを設定するステップ
        run: |
          git config --global user.name 'taya99' # Gitのユーザー名を設定
          git config --global user.email 'powerbomb_19@outlook.com' # Gitのメールアドレスを設定

      - name: Check if devlop branch exists # devlopブランチが存在するか確認するステップ
        id: check_devlop_branch # ステップのIDを設定
        run: |
          if git ls-remote --heads origin devlop_${{ github.event.inputs.date }} | grep devlop_${{ github.event.inputs.date }}; then # devlopブランチが存在するか確認
            echo "Branch 'devlop_${{ github.event.inputs.date }}' already exists." # 存在する場合のメッセージ
            echo "exists=true" >> $GITHUB_ENV # 存在する場合の出力変数設定
          else
            echo "Branch 'devlop_${{ github.event.inputs.date }}' does not exist." # 存在しない場合のメッセージ
            echo "exists=false" >> $GITHUB_ENV # 存在しない場合の出力変数設定
          fi

      - name: Create devlop branch if it does not exist # devlopブランチが存在しない場合に作成するステップ
        if: env.exists == 'false' # devlopブランチが存在しない場合のみ実行
        run: |
          git checkout -b devlop_${{ github.event.inputs.date }} # 新しいdevlopブランチを作成
          git push origin devlop_${{ github.event.inputs.date }} # リモートリポジトリにプッシュ

      - name: Check if release branch exists # releaseブランチが存在するか確認するステップ
        id: check_release_branch # ステップのIDを設定
        run: |
          if git ls-remote --heads origin release_${{ github.event.inputs.date }} | grep release_${{ github.event.inputs.date }}; then # releaseブランチが存在するか確認
            echo "Branch 'release_${{ github.event.inputs.date }}' already exists." # 存在する場合のメッセージ
            echo "exists=true" >> $GITHUB_ENV # 存在する場合の出力変数設定
          else
            echo "Branch 'release_${{ github.event.inputs.date }}' does not exist." # 存在しない場合のメッセージ
            echo "exists=false" >> $GITHUB_ENV # 存在しない場合の出力変数設定
          fi

      - name: Create release branch if it does not exist # releaseブランチが存在しない場合に作成するステップ
        if: env.exists == 'false' # releaseブランチが存在しない場合のみ実行
        run: |
          git checkout devlop_${{ github.event.inputs.date }} # devlopブランチにチェックアウト
          git checkout -b release_${{ github.event.inputs.date }} # 新しいreleaseブランチを作成
          git push origin release_${{ github.event.inputs.date }} # リモートリポジトリにプッシュ

      - name: Check if feature branch exists # featureブランチが存在するか確認するステップ
        id: check_feature_branch # ステップのIDを設定
        run: |
          if git ls-remote --heads origin feature_${{ github.event.inputs.date }} | grep feature_${{ github.event.inputs.date }}; then # featureブランチが存在するか確認
            echo "Branch 'feature_${{ github.event.inputs.date }}' already exists." # 存在する場合のメッセージ
            echo "exists=true" >> $GITHUB_ENV # 存在する場合の出力変数設定
          else
            echo "Branch 'feature_${{ github.event.inputs.date }}' does not exist." # 存在しない場合のメッセージ
            echo "exists=false" >> $GITHUB_ENV # 存在しない場合の出力変数設定
          fi

      - name: Create feature branch if it does not exist # featureブランチが存在しない場合に作成するステップ
        if: env.exists == 'false' # featureブランチが存在しない場合のみ実行
        run: |
          git checkout release_${{ github.event.inputs.date }} # releaseブランチにチェックアウト
          git checkout -b feature_${{ github.event.inputs.date }} # 新しいfeatureブランチを作成
          git push origin feature_${{ github.event.inputs.date }} # リモートリポジトリにプッシュ
